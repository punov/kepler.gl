"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

var _typeof = require("@babel/runtime/helpers/typeof");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports["default"] = exports.mapStyleReducerFactory = void 0;

var _defineProperty2 = _interopRequireDefault(require("@babel/runtime/helpers/defineProperty"));

var _reduxActions = require("redux-actions");

var _actionTypes = _interopRequireDefault(require("../constants/action-types"));

var mapStyleUpdaters = _interopRequireWildcard(require("./map-style-updaters"));

var _actionHandler;

function _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== "function") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }

function _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || _typeof(obj) !== "object" && typeof obj !== "function") { return { "default": obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== "default" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj["default"] = obj; if (cache) { cache.set(obj, newObj); } return newObj; }

function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) { symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); } keys.push.apply(keys, symbols); } return keys; }

function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { (0, _defineProperty2["default"])(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }

/**
 * Important: Do not rename `actionHandler` or the assignment pattern of property value.
 * It is used to generate documentation
 */
var actionHandler = (_actionHandler = {}, (0, _defineProperty2["default"])(_actionHandler, _actionTypes["default"].INIT, mapStyleUpdaters.initMapStyleUpdater), (0, _defineProperty2["default"])(_actionHandler, _actionTypes["default"].INPUT_MAP_STYLE, mapStyleUpdaters.inputMapStyleUpdater), (0, _defineProperty2["default"])(_actionHandler, _actionTypes["default"].MAP_CONFIG_CHANGE, mapStyleUpdaters.mapConfigChangeUpdater), (0, _defineProperty2["default"])(_actionHandler, _actionTypes["default"].MAP_STYLE_CHANGE, mapStyleUpdaters.mapStyleChangeUpdater), (0, _defineProperty2["default"])(_actionHandler, _actionTypes["default"].REQUEST_MAP_STYLES, mapStyleUpdaters.requestMapStylesUpdater), (0, _defineProperty2["default"])(_actionHandler, _actionTypes["default"].LOAD_MAP_STYLES, mapStyleUpdaters.loadMapStylesUpdater), (0, _defineProperty2["default"])(_actionHandler, _actionTypes["default"].LOAD_MAP_STYLE_ERR, mapStyleUpdaters.loadMapStyleErrUpdater), (0, _defineProperty2["default"])(_actionHandler, _actionTypes["default"].RECEIVE_MAP_CONFIG, mapStyleUpdaters.receiveMapConfigUpdater), (0, _defineProperty2["default"])(_actionHandler, _actionTypes["default"].LOAD_CUSTOM_MAP_STYLE, mapStyleUpdaters.loadCustomMapStyleUpdater), (0, _defineProperty2["default"])(_actionHandler, _actionTypes["default"].ADD_CUSTOM_MAP_STYLE, mapStyleUpdaters.addCustomMapStyleUpdater), (0, _defineProperty2["default"])(_actionHandler, _actionTypes["default"].RESET_MAP_CONFIG, mapStyleUpdaters.resetMapConfigMapStyleUpdater), (0, _defineProperty2["default"])(_actionHandler, _actionTypes["default"].SET_3D_BUILDING_COLOR, mapStyleUpdaters.set3dBuildingColorUpdater), (0, _defineProperty2["default"])(_actionHandler, _actionTypes["default"].RESET_MAP_CONFIG, mapStyleUpdaters.resetMapConfigMapStyleUpdater), _actionHandler);

var mapStyleReducerFactory = function mapStyleReducerFactory() {
  var initialState = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};
  return (// @ts-ignore
    (0, _reduxActions.handleActions)(actionHandler, _objectSpread(_objectSpread(_objectSpread({}, mapStyleUpdaters.INITIAL_MAP_STYLE), initialState), {}, {
      initialState: initialState
    }))
  );
};

exports.mapStyleReducerFactory = mapStyleReducerFactory;

var _default = mapStyleReducerFactory();

exports["default"] = _default;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uL3NyYy9yZWR1Y2Vycy9tYXAtc3R5bGUuanMiXSwibmFtZXMiOlsiYWN0aW9uSGFuZGxlciIsIkFjdGlvblR5cGVzIiwiSU5JVCIsIm1hcFN0eWxlVXBkYXRlcnMiLCJpbml0TWFwU3R5bGVVcGRhdGVyIiwiSU5QVVRfTUFQX1NUWUxFIiwiaW5wdXRNYXBTdHlsZVVwZGF0ZXIiLCJNQVBfQ09ORklHX0NIQU5HRSIsIm1hcENvbmZpZ0NoYW5nZVVwZGF0ZXIiLCJNQVBfU1RZTEVfQ0hBTkdFIiwibWFwU3R5bGVDaGFuZ2VVcGRhdGVyIiwiUkVRVUVTVF9NQVBfU1RZTEVTIiwicmVxdWVzdE1hcFN0eWxlc1VwZGF0ZXIiLCJMT0FEX01BUF9TVFlMRVMiLCJsb2FkTWFwU3R5bGVzVXBkYXRlciIsIkxPQURfTUFQX1NUWUxFX0VSUiIsImxvYWRNYXBTdHlsZUVyclVwZGF0ZXIiLCJSRUNFSVZFX01BUF9DT05GSUciLCJyZWNlaXZlTWFwQ29uZmlnVXBkYXRlciIsIkxPQURfQ1VTVE9NX01BUF9TVFlMRSIsImxvYWRDdXN0b21NYXBTdHlsZVVwZGF0ZXIiLCJBRERfQ1VTVE9NX01BUF9TVFlMRSIsImFkZEN1c3RvbU1hcFN0eWxlVXBkYXRlciIsIlJFU0VUX01BUF9DT05GSUciLCJyZXNldE1hcENvbmZpZ01hcFN0eWxlVXBkYXRlciIsIlNFVF8zRF9CVUlMRElOR19DT0xPUiIsInNldDNkQnVpbGRpbmdDb2xvclVwZGF0ZXIiLCJtYXBTdHlsZVJlZHVjZXJGYWN0b3J5IiwiaW5pdGlhbFN0YXRlIiwiSU5JVElBTF9NQVBfU1RZTEUiXSwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7Ozs7QUFvQkE7O0FBQ0E7O0FBQ0E7Ozs7Ozs7Ozs7OztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsSUFBTUEsYUFBYSwwRUFDaEJDLHdCQUFZQyxJQURJLEVBQ0dDLGdCQUFnQixDQUFDQyxtQkFEcEIsb0RBRWhCSCx3QkFBWUksZUFGSSxFQUVjRixnQkFBZ0IsQ0FBQ0csb0JBRi9CLG9EQUdoQkwsd0JBQVlNLGlCQUhJLEVBR2dCSixnQkFBZ0IsQ0FBQ0ssc0JBSGpDLG9EQUloQlAsd0JBQVlRLGdCQUpJLEVBSWVOLGdCQUFnQixDQUFDTyxxQkFKaEMsb0RBS2hCVCx3QkFBWVUsa0JBTEksRUFLaUJSLGdCQUFnQixDQUFDUyx1QkFMbEMsb0RBTWhCWCx3QkFBWVksZUFOSSxFQU1jVixnQkFBZ0IsQ0FBQ1csb0JBTi9CLG9EQU9oQmIsd0JBQVljLGtCQVBJLEVBT2lCWixnQkFBZ0IsQ0FBQ2Esc0JBUGxDLG9EQVFoQmYsd0JBQVlnQixrQkFSSSxFQVFpQmQsZ0JBQWdCLENBQUNlLHVCQVJsQyxvREFTaEJqQix3QkFBWWtCLHFCQVRJLEVBU29CaEIsZ0JBQWdCLENBQUNpQix5QkFUckMsb0RBVWhCbkIsd0JBQVlvQixvQkFWSSxFQVVtQmxCLGdCQUFnQixDQUFDbUIsd0JBVnBDLG9EQVdoQnJCLHdCQUFZc0IsZ0JBWEksRUFXZXBCLGdCQUFnQixDQUFDcUIsNkJBWGhDLG9EQVloQnZCLHdCQUFZd0IscUJBWkksRUFZb0J0QixnQkFBZ0IsQ0FBQ3VCLHlCQVpyQyxvREFhaEJ6Qix3QkFBWXNCLGdCQWJJLEVBYWVwQixnQkFBZ0IsQ0FBQ3FCLDZCQWJoQyxrQkFBbkI7O0FBZ0JPLElBQU1HLHNCQUFzQixHQUFHLFNBQXpCQSxzQkFBeUI7QUFBQSxNQUFDQyxZQUFELHVFQUFnQixFQUFoQjtBQUFBLFNBQ3BDO0FBQ0EscUNBQWM1QixhQUFkLGdEQUNLRyxnQkFBZ0IsQ0FBQzBCLGlCQUR0QixHQUVLRCxZQUZMO0FBR0VBLE1BQUFBLFlBQVksRUFBWkE7QUFIRjtBQUZvQztBQUFBLENBQS9COzs7O2VBUVFELHNCQUFzQixFIiwic291cmNlc0NvbnRlbnQiOlsiLy8gQ29weXJpZ2h0IChjKSAyMDIxIFViZXIgVGVjaG5vbG9naWVzLCBJbmMuXG4vL1xuLy8gUGVybWlzc2lvbiBpcyBoZXJlYnkgZ3JhbnRlZCwgZnJlZSBvZiBjaGFyZ2UsIHRvIGFueSBwZXJzb24gb2J0YWluaW5nIGEgY29weVxuLy8gb2YgdGhpcyBzb2Z0d2FyZSBhbmQgYXNzb2NpYXRlZCBkb2N1bWVudGF0aW9uIGZpbGVzICh0aGUgXCJTb2Z0d2FyZVwiKSwgdG8gZGVhbFxuLy8gaW4gdGhlIFNvZnR3YXJlIHdpdGhvdXQgcmVzdHJpY3Rpb24sIGluY2x1ZGluZyB3aXRob3V0IGxpbWl0YXRpb24gdGhlIHJpZ2h0c1xuLy8gdG8gdXNlLCBjb3B5LCBtb2RpZnksIG1lcmdlLCBwdWJsaXNoLCBkaXN0cmlidXRlLCBzdWJsaWNlbnNlLCBhbmQvb3Igc2VsbFxuLy8gY29waWVzIG9mIHRoZSBTb2Z0d2FyZSwgYW5kIHRvIHBlcm1pdCBwZXJzb25zIHRvIHdob20gdGhlIFNvZnR3YXJlIGlzXG4vLyBmdXJuaXNoZWQgdG8gZG8gc28sIHN1YmplY3QgdG8gdGhlIGZvbGxvd2luZyBjb25kaXRpb25zOlxuLy9cbi8vIFRoZSBhYm92ZSBjb3B5cmlnaHQgbm90aWNlIGFuZCB0aGlzIHBlcm1pc3Npb24gbm90aWNlIHNoYWxsIGJlIGluY2x1ZGVkIGluXG4vLyBhbGwgY29waWVzIG9yIHN1YnN0YW50aWFsIHBvcnRpb25zIG9mIHRoZSBTb2Z0d2FyZS5cbi8vXG4vLyBUSEUgU09GVFdBUkUgSVMgUFJPVklERUQgXCJBUyBJU1wiLCBXSVRIT1VUIFdBUlJBTlRZIE9GIEFOWSBLSU5ELCBFWFBSRVNTIE9SXG4vLyBJTVBMSUVELCBJTkNMVURJTkcgQlVUIE5PVCBMSU1JVEVEIFRPIFRIRSBXQVJSQU5USUVTIE9GIE1FUkNIQU5UQUJJTElUWSxcbi8vIEZJVE5FU1MgRk9SIEEgUEFSVElDVUxBUiBQVVJQT1NFIEFORCBOT05JTkZSSU5HRU1FTlQuIElOIE5PIEVWRU5UIFNIQUxMIFRIRVxuLy8gQVVUSE9SUyBPUiBDT1BZUklHSFQgSE9MREVSUyBCRSBMSUFCTEUgRk9SIEFOWSBDTEFJTSwgREFNQUdFUyBPUiBPVEhFUlxuLy8gTElBQklMSVRZLCBXSEVUSEVSIElOIEFOIEFDVElPTiBPRiBDT05UUkFDVCwgVE9SVCBPUiBPVEhFUldJU0UsIEFSSVNJTkcgRlJPTSxcbi8vIE9VVCBPRiBPUiBJTiBDT05ORUNUSU9OIFdJVEggVEhFIFNPRlRXQVJFIE9SIFRIRSBVU0UgT1IgT1RIRVIgREVBTElOR1MgSU5cbi8vIFRIRSBTT0ZUV0FSRS5cblxuaW1wb3J0IHtoYW5kbGVBY3Rpb25zfSBmcm9tICdyZWR1eC1hY3Rpb25zJztcbmltcG9ydCBBY3Rpb25UeXBlcyBmcm9tICdjb25zdGFudHMvYWN0aW9uLXR5cGVzJztcbmltcG9ydCAqIGFzIG1hcFN0eWxlVXBkYXRlcnMgZnJvbSAnLi9tYXAtc3R5bGUtdXBkYXRlcnMnO1xuXG4vKipcbiAqIEltcG9ydGFudDogRG8gbm90IHJlbmFtZSBgYWN0aW9uSGFuZGxlcmAgb3IgdGhlIGFzc2lnbm1lbnQgcGF0dGVybiBvZiBwcm9wZXJ0eSB2YWx1ZS5cbiAqIEl0IGlzIHVzZWQgdG8gZ2VuZXJhdGUgZG9jdW1lbnRhdGlvblxuICovXG5jb25zdCBhY3Rpb25IYW5kbGVyID0ge1xuICBbQWN0aW9uVHlwZXMuSU5JVF06IG1hcFN0eWxlVXBkYXRlcnMuaW5pdE1hcFN0eWxlVXBkYXRlcixcbiAgW0FjdGlvblR5cGVzLklOUFVUX01BUF9TVFlMRV06IG1hcFN0eWxlVXBkYXRlcnMuaW5wdXRNYXBTdHlsZVVwZGF0ZXIsXG4gIFtBY3Rpb25UeXBlcy5NQVBfQ09ORklHX0NIQU5HRV06IG1hcFN0eWxlVXBkYXRlcnMubWFwQ29uZmlnQ2hhbmdlVXBkYXRlcixcbiAgW0FjdGlvblR5cGVzLk1BUF9TVFlMRV9DSEFOR0VdOiBtYXBTdHlsZVVwZGF0ZXJzLm1hcFN0eWxlQ2hhbmdlVXBkYXRlcixcbiAgW0FjdGlvblR5cGVzLlJFUVVFU1RfTUFQX1NUWUxFU106IG1hcFN0eWxlVXBkYXRlcnMucmVxdWVzdE1hcFN0eWxlc1VwZGF0ZXIsXG4gIFtBY3Rpb25UeXBlcy5MT0FEX01BUF9TVFlMRVNdOiBtYXBTdHlsZVVwZGF0ZXJzLmxvYWRNYXBTdHlsZXNVcGRhdGVyLFxuICBbQWN0aW9uVHlwZXMuTE9BRF9NQVBfU1RZTEVfRVJSXTogbWFwU3R5bGVVcGRhdGVycy5sb2FkTWFwU3R5bGVFcnJVcGRhdGVyLFxuICBbQWN0aW9uVHlwZXMuUkVDRUlWRV9NQVBfQ09ORklHXTogbWFwU3R5bGVVcGRhdGVycy5yZWNlaXZlTWFwQ29uZmlnVXBkYXRlcixcbiAgW0FjdGlvblR5cGVzLkxPQURfQ1VTVE9NX01BUF9TVFlMRV06IG1hcFN0eWxlVXBkYXRlcnMubG9hZEN1c3RvbU1hcFN0eWxlVXBkYXRlcixcbiAgW0FjdGlvblR5cGVzLkFERF9DVVNUT01fTUFQX1NUWUxFXTogbWFwU3R5bGVVcGRhdGVycy5hZGRDdXN0b21NYXBTdHlsZVVwZGF0ZXIsXG4gIFtBY3Rpb25UeXBlcy5SRVNFVF9NQVBfQ09ORklHXTogbWFwU3R5bGVVcGRhdGVycy5yZXNldE1hcENvbmZpZ01hcFN0eWxlVXBkYXRlcixcbiAgW0FjdGlvblR5cGVzLlNFVF8zRF9CVUlMRElOR19DT0xPUl06IG1hcFN0eWxlVXBkYXRlcnMuc2V0M2RCdWlsZGluZ0NvbG9yVXBkYXRlcixcbiAgW0FjdGlvblR5cGVzLlJFU0VUX01BUF9DT05GSUddOiBtYXBTdHlsZVVwZGF0ZXJzLnJlc2V0TWFwQ29uZmlnTWFwU3R5bGVVcGRhdGVyXG59O1xuXG5leHBvcnQgY29uc3QgbWFwU3R5bGVSZWR1Y2VyRmFjdG9yeSA9IChpbml0aWFsU3RhdGUgPSB7fSkgPT5cbiAgLy8gQHRzLWlnbm9yZVxuICBoYW5kbGVBY3Rpb25zKGFjdGlvbkhhbmRsZXIsIHtcbiAgICAuLi5tYXBTdHlsZVVwZGF0ZXJzLklOSVRJQUxfTUFQX1NUWUxFLFxuICAgIC4uLmluaXRpYWxTdGF0ZSxcbiAgICBpbml0aWFsU3RhdGVcbiAgfSk7XG5cbmV4cG9ydCBkZWZhdWx0IG1hcFN0eWxlUmVkdWNlckZhY3RvcnkoKTtcbiJdfQ==